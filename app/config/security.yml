# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:
    encoders:
            # Our user class and the algorithm we'll use to encode passwords
            # https://symfony.com/doc/current/security.html#c-encoding-the-user-s-password
            AppBundle\Entity\User:
                algorithm: bcrypt

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        database_users:
            entity: { class: AppBundle:User, property: email }

    firewalls:
        secured_area:
            # this firewall applies to all URLs
            pattern: ^/

            # but the firewall does not require login on every page
            # denying access is done in access_control or in your controllers
            anonymous: true

            # This allows the user to login by submitting a username and password
            # Reference: https://symfony.com/doc/current/security/form_login_setup.html
            form_login:
                # The route name that the login form submits to
                check_path: login
                # The name of the route where the login form lives
                # When the user tries to access a protected page, they are redirected here
                login_path: login
                # The page users are redirect to when there is no previous page stored in the
                # session (for example when the users access directly to the login page).
                default_target_path: user

            logout:
                # The route name the user can go to in order to logout
                path: security_logout
                # The name of the route to redirect to after logging out
                target: user

    access_control:
            # require ROLE_USER for /user*
            - { path: ^/user, roles: ROLE_USER }